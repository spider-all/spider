image:
  repository: ghcr.io/spider-all/spider-cplusplus
  pullPolicy: IfNotPresent
  tag: "v1.2.5-202109120131"

spider:
  name: tosone
  useragent: "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_0_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.67 Safari/537.36"
  timezone: "Asia/Shanghai"
  token: ""
  database:
    type: leveldb
    leveldb:
      path: /spider-cplusplus/data
    #
    # type: mongodb
    # mongodb:
    #   dsn: ""
    #
    # type: mysql
    # mysql:
    #   host: "127.0.0.1"
    #   user: "root"
    #   password: "8541539655"
    #   db: "test"
    #   port: 3306
    #
    # type: postgresql
    # postgresql:
    #   dsn: ""
    #
    # type: sqlite3
    # sqlite3:
    #   path: /spider-cplusplus/data/spider.db

commonAnnotations:
  helm.sh/resource-policy: "keep"

commonLabels: {}

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 125m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  ## @param persistence.enabled Enable persistence using PVC
  ##
  enabled: true
  ## @param persistence.storageClass PVC Storage Class for Drupal volume
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.accessMode PVC Access Mode for Drupal volume
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  accessMode: ReadWriteOnce
  ## @param persistence.size PVC Storage Request for Drupal volume
  ##
  size: 8Gi
  ## @param persistence.existingClaim A manually managed Persistent Volume Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  existingClaim: ""
  ## @param persistence.hostPath If defined, the drupal-data volume will mount to the specified hostPath.
  ## Requires persistence.enabled: true
  ## Requires persistence.existingClaim: nil|false
  ## Default: nil.
  ##
  hostPath: ""
